{"ast":null,"code":"var _jsxFileName = \"/Users/yuzi/myprograming/next-todo/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nconst BASE_PATH = \"http://virtserver.swaggerhub.com/ziroppe/WeWantToEatJiro/1.0.0\";\n\nconst App = () => {\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }\n  }, \"\\u3061\\u3093\\u3053\");\n};\n\nApp.getInitialProps = async ({\n  req\n}) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(BASE_PATH + \"/categories\");\n  const data = await res.json();\n  const categories = data.map(val => {\n    return val.name;\n  });\n  console.log(categories);\n  return {\n    categories\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yuzi/myprograming/next-todo/pages/index.tsx"],"names":["fetch","BASE_PATH","App","getInitialProps","req","res","data","json","categories","map","val","name","console","log"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,MAAMC,SAAS,GACb,gEADF;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAP;AACD,CAFD;;AAIAA,GAAG,CAACC,eAAJ,GAAsB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACvC;AACA,QAAMC,GAAG,GAAG,MAAML,KAAK,CAACC,SAAS,GAAG,aAAb,CAAvB;AACA,QAAMK,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMC,UAAoB,GAAGF,IAAI,CAACG,GAAL,CAAUC,GAAD,IAAS;AAC7C,WAAOA,GAAG,CAACC,IAAX;AACD,GAF4B,CAA7B;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CATD;;AAUA,eAAeN,GAAf","sourcesContent":["import { useState } from \"react\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst BASE_PATH =\n  \"http://virtserver.swaggerhub.com/ziroppe/WeWantToEatJiro/1.0.0\";\n\nconst App = () => {\n  return <h1>ちんこ</h1>;\n};\n\nApp.getInitialProps = async ({ req }) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(BASE_PATH + \"/categories\");\n  const data = await res.json();\n  const categories: string[] = data.map((val) => {\n    return val.name;\n  });\n  console.log(categories);\n  return { categories };\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}