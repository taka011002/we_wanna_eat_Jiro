{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuzi/myprograming/next-todo/pages/rooms.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Peer from \"skyway-js\";\nimport { SKYWAY_API_KEY } from \"./env\";\n\nvar Rooms = function Rooms(props) {\n  var getRoomModeByHash = function getRoomModeByHash() {\n    return location.hash === \"#sfu\" ? \"sfu\" : \"mesh\";\n  };\n\n  var _useState = useState(getRoomModeByHash()),\n      roomMode = _useState[0],\n      setRoomMode = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      roomId = _useState2[0],\n      setRoomId = _useState2[1];\n\n  var _useState3 = useState(true),\n      localVideoMuted = _useState3[0],\n      setLocalVideoMuted = _useState3[1];\n\n  var _useState4 = useState(true),\n      localVideoPlaysInline = _useState4[0],\n      setLocalVideoPlaysInline = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      localVideoMessages = _useState5[0],\n      setLocalVideoMessages = _useState5[1];\n\n  var peer = new Peer({\n    key: SKYWAY_API_KEY\n  });\n\n  var joinHandler = function joinHandler() {\n    var room, onClickSend;\n    return _regeneratorRuntime.async(function joinHandler$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            onClickSend = function _onClickSend() {\n              // Send message to all of the peers in the room via websocket\n              room.send(localText.value);\n              messages.textContent += \"\".concat(peer.id, \": \").concat(localText.value, \"\\n\");\n              localText.value = \"\";\n            };\n\n            if (peer.open) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 3:\n            _context2.t0 = peer;\n            _context2.t1 = roomId;\n            _context2.t2 = getRoomModeByHash();\n            _context2.next = 8;\n            return _regeneratorRuntime.awrap(navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: true\n            }));\n\n          case 8:\n            _context2.t3 = _context2.sent;\n            _context2.t4 = {\n              mode: _context2.t2,\n              stream: _context2.t3\n            };\n            room = _context2.t0.joinRoom.call(_context2.t0, _context2.t1, _context2.t4);\n            room.once(\"open\", function () {\n              setLocalVideoMessages(localVideoMessages + \"=== You joined ===\\n\");\n            });\n            room.on(\"peerJoin\", function (peerId) {\n              setLocalVideoMessages(localVideoMessages + \"=== \".concat(peerId, \" joined ===\\n\"));\n            }); // Render remote stream for new peer join in the room\n\n            room.on(\"stream\", function _callee(stream) {\n              var newVideo;\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      newVideo = document.createElement(\"video\");\n                      newVideo.srcObject = stream;\n                      setLocalVideoPlaysInline(true); // mark peerId to find it later at peerLeave event\n\n                      newVideo.setAttribute(\"data-peer-id\", stream.peerId);\n                      remoteVideos.append(newVideo);\n                      _context.next = 7;\n                      return _regeneratorRuntime.awrap(newVideo.play()[\"catch\"](console.error));\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n            room.on(\"data\", function (_ref) {\n              var data = _ref.data,\n                  src = _ref.src;\n              // Show a message sent to the room and who sent\n              setLocalVideoMessages(localVideoMessages + \"\".concat(src, \": \").concat(data, \"\\n\"));\n            }); // for closing room members\n\n            room.on(\"peerLeave\", function (peerId) {\n              var remoteVideo = remoteVideos.querySelector(\"[data-peer-id=\".concat(peerId, \"]\"));\n              remoteVideo.srcObject.getTracks().forEach(function (track) {\n                return track.stop();\n              });\n              remoteVideo.srcObject = null;\n              remoteVideo.remove();\n              messages.textContent += \"=== \".concat(peerId, \" left ===\\n\");\n            }); // for closing myself\n\n            room.once(\"close\", function () {\n              sendTrigger.removeEventListener(\"click\", onClickSend);\n              messages.textContent += \"== You left ===\\n\";\n              Array.from(remoteVideos.children).forEach(function (remoteVideo) {\n                remoteVideo.srcObject.getTracks().forEach(function (track) {\n                  return track.stop();\n                });\n                remoteVideo.srcObject = null;\n                remoteVideo.remove();\n              });\n            });\n            sendTrigger.addEventListener(\"click\", onClickSend);\n            leaveTrigger.addEventListener(\"click\", function () {\n              return room.close();\n            }, {\n              once: true\n            });\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"hashchange\", function () {\n      return setRoomMode(getRoomModeByHash());\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Room Example \\u30BF\\u30A4\\u30C8\\u30EB\"), __jsx(\"div\", {\n    className: \"room\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"local-stream\",\n    muted: localVideoMuted,\n    ref: function _callee2(video) {\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video: true\n              }));\n\n            case 2:\n              video.srcObject = _context3.sent;\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(video.play());\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    playsInline: localVideoPlaysInline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    id: \"room-mode\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, roomMode), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Room Name\",\n    id: \"room-id\",\n    onChange: function onChange(e) {\n      setRoomId(e.target.value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"join-trigger\",\n    onClick: joinHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Join\"), __jsx(\"button\", {\n    id: \"leave-trigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Leave\")), __jsx(\"div\", {\n    className: \"remote-streams\",\n    id: \"remote-streams\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, __jsx(\"pre\", {\n    className: \"messages\",\n    id: \"messages\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, localVideoMessages), __jsx(\"input\", {\n    type: \"text\",\n    id: \"local-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"send-trigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Send\")))), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }));\n};\n\nRooms.getInitialProps = function _callee3(_ref2) {\n  var query;\n  return _regeneratorRuntime.async(function _callee3$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          query = _ref2.query;\n          return _context4.abrupt(\"return\", 1);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Rooms;","map":{"version":3,"sources":["/Users/yuzi/myprograming/next-todo/pages/rooms.tsx"],"names":["useState","useEffect","Peer","SKYWAY_API_KEY","Rooms","props","getRoomModeByHash","location","hash","roomMode","setRoomMode","roomId","setRoomId","localVideoMuted","setLocalVideoMuted","localVideoPlaysInline","setLocalVideoPlaysInline","localVideoMessages","setLocalVideoMessages","peer","key","joinHandler","onClickSend","room","send","localText","value","messages","textContent","id","open","navigator","mediaDevices","getUserMedia","audio","video","mode","stream","joinRoom","once","on","peerId","newVideo","document","createElement","srcObject","setAttribute","remoteVideos","append","play","console","error","data","src","remoteVideo","querySelector","getTracks","forEach","track","stop","remove","sendTrigger","removeEventListener","Array","from","children","addEventListener","leaveTrigger","close","window","e","target","getInitialProps","query"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Peer from \"skyway-js\";\n\nimport { API_PATH, SKYWAY_API_KEY } from \"./env\";\n\nconst Rooms = (props) => {\n  const getRoomModeByHash = () => (location.hash === \"#sfu\" ? \"sfu\" : \"mesh\");\n\n  const [roomMode, setRoomMode] = useState(getRoomModeByHash());\n  const [roomId, setRoomId] = useState(\"\");\n  const [localVideoMuted, setLocalVideoMuted] = useState(true);\n  const [localVideoPlaysInline, setLocalVideoPlaysInline] = useState(true);\n  const [localVideoMessages, setLocalVideoMessages] = useState(\"\");\n  const peer = new Peer({ key: SKYWAY_API_KEY });\n  const joinHandler = async () => {\n    // Note that you need to ensure the peer has connected to signaling server\n    // before using methods of peer instance.\n    if (!peer.open) {\n      return;\n    }\n\n    const room = peer.joinRoom(roomId, {\n      mode: getRoomModeByHash(),\n      stream: await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      }),\n    });\n\n    room.once(\"open\", () => {\n      setLocalVideoMessages(localVideoMessages + \"=== You joined ===\\n\");\n    });\n    room.on(\"peerJoin\", (peerId) => {\n      setLocalVideoMessages(localVideoMessages + `=== ${peerId} joined ===\\n`);\n    });\n\n    // Render remote stream for new peer join in the room\n    room.on(\"stream\", async (stream) => {\n      const newVideo = document.createElement(\"video\");\n      newVideo.srcObject = stream;\n      setLocalVideoPlaysInline(true);\n      // mark peerId to find it later at peerLeave event\n      newVideo.setAttribute(\"data-peer-id\", stream.peerId);\n      remoteVideos.append(newVideo);\n      await newVideo.play().catch(console.error);\n    });\n\n    room.on(\"data\", ({ data, src }) => {\n      // Show a message sent to the room and who sent\n      setLocalVideoMessages(localVideoMessages + `${src}: ${data}\\n`);\n    });\n\n    // for closing room members\n    room.on(\"peerLeave\", (peerId) => {\n      const remoteVideo = remoteVideos.querySelector(\n        `[data-peer-id=${peerId}]`\n      );\n      remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n      remoteVideo.srcObject = null;\n      remoteVideo.remove();\n\n      messages.textContent += `=== ${peerId} left ===\\n`;\n    });\n\n    // for closing myself\n    room.once(\"close\", () => {\n      sendTrigger.removeEventListener(\"click\", onClickSend);\n      messages.textContent += \"== You left ===\\n\";\n      Array.from(remoteVideos.children).forEach((remoteVideo) => {\n        remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n        remoteVideo.srcObject = null;\n        remoteVideo.remove();\n      });\n    });\n\n    sendTrigger.addEventListener(\"click\", onClickSend);\n    leaveTrigger.addEventListener(\"click\", () => room.close(), { once: true });\n\n    function onClickSend() {\n      // Send message to all of the peers in the room via websocket\n      room.send(localText.value);\n\n      messages.textContent += `${peer.id}: ${localText.value}\\n`;\n      localText.value = \"\";\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"hashchange\", () =>\n      setRoomMode(getRoomModeByHash())\n    );\n  }, []);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"heading\">Room Example タイトル</h1>\n        <div className=\"room\">\n          <div>\n            <video\n              id=\"local-stream\"\n              muted={localVideoMuted}\n              ref={async (video) => {\n                // Cannot set property 'srcObject' of null問題\n                video.srcObject = await navigator.mediaDevices.getUserMedia({\n                  audio: true,\n                  video: true,\n                });\n                await video.play();\n              }}\n              playsInline={localVideoPlaysInline}\n            ></video>\n            <span id=\"room-mode\">{roomMode}</span>\n            <input\n              type=\"text\"\n              placeholder=\"Room Name\"\n              id=\"room-id\"\n              onChange={(e) => {\n                setRoomId(e.target.value);\n              }}\n            />\n            <button id=\"join-trigger\" onClick={joinHandler}>\n              Join\n            </button>\n            <button id=\"leave-trigger\">Leave</button>\n          </div>\n          <div className=\"remote-streams\" id=\"remote-streams\"></div>\n          <div>\n            <pre className=\"messages\" id=\"messages\">\n              {localVideoMessages}\n            </pre>\n            <input type=\"text\" id=\"local-text\" />\n            <button id=\"send-trigger\">Send</button>\n          </div>\n        </div>\n      </div>\n      <ul></ul>\n    </div>\n  );\n};\n\nRooms.getInitialProps = async ({ query }) => {\n  return 1;\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}