{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuzi/myprograming/next-todo/pages/categories.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\nvar Categories = function Categories() {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.categories.map(function (category, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: \"/categories\",\n        query: {\n          index: \"\".concat(index)\n        }\n      },\n      as: \"/categories\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, category)));\n  })));\n};\n\nCategories.getInitialProps = function _callee(_ref) {\n  var query, res, resJson, rooms;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(API_PATH + \"/categories/\" + query.name + \"/rooms\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          resJson = _context.sent;\n          console.log(resJson);\n          rooms = resJson.map(function (room) {\n            // roomには名前, 管理者名, 詳細あたりがあればよさそう\n            return {\n              name: room.name,\n              admin: room.admin,\n              description: room.description\n            };\n          });\n          return _context.abrupt(\"return\", rooms);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Categories;","map":{"version":3,"sources":["/Users/yuzi/myprograming/next-todo/pages/categories.tsx"],"names":["fetch","Link","API_PATH","Categories","props","categories","map","category","index","pathname","query","getInitialProps","name","res","json","resJson","console","log","rooms","room","admin","description"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqB,UAACC,QAAD,EAAmBC,KAAnB,EAAqC;AACzD,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,aAAZ;AAA2BC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,YAAKA,KAAL;AAAP;AAAlC,OADR;AAEE,MAAA,EAAE,EAAE,aAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAJ,CAJF,CADF,CADF;AAUD,GAXA,CADH,CADF,CADF;AAkBD,CAnBD;;AAqBAJ,UAAU,CAACQ,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASD,UAAAA,KAAT,QAASA,KAAT;AAAA;AAAA,2CAGTV,KAAK,CAACE,QAAQ,GAAG,cAAX,GAA4BQ,KAAK,CAACE,IAAlC,GAAyC,QAA1C,CAHI;;AAAA;AAGrBC,UAAAA,GAHqB;AAAA;AAAA,2CAILA,GAAG,CAACC,IAAJ,EAJK;;AAAA;AAIrBC,UAAAA,OAJqB;AAK3BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACMG,UAAAA,KANqB,GAMbH,OAAO,CAACT,GAAR,CAAY,UAACa,IAAD,EAAU;AAClC;AACA,mBAAO;AACLP,cAAAA,IAAI,EAAEO,IAAI,CAACP,IADN;AAELQ,cAAAA,KAAK,EAAED,IAAI,CAACC,KAFP;AAGLC,cAAAA,WAAW,EAAEF,IAAI,CAACE;AAHb,aAAP;AAKD,WAPa,CANa;AAAA,2CAcpBH,KAdoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAgBA,eAAef,UAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\nconst Categories = () => {\n  return (\n    <div>\n      <ul>\n        {props.categories.map((category: string, index: number) => {\n          return (\n            <li key={index}>\n              <Link\n                href={{ pathname: \"/categories\", query: { index: `${index}` } }}\n                as={\"/categories\"}\n              >\n                <a>{category}</a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCategories.getInitialProps = async ({ query }) => {\n  // indexを元にapi叩く\n  // ex: /categories/1/rooms (カテゴリID = 1の部屋全て)\n  const res = await fetch(API_PATH + \"/categories/\" + query.name + \"/rooms\");\n  const resJson = await res.json();\n  console.log(resJson);\n  const rooms = resJson.map((room) => {\n    // roomには名前, 管理者名, 詳細あたりがあればよさそう\n    return {\n      name: room.name,\n      admin: room.admin,\n      description: room.description,\n    };\n  });\n  return rooms;\n};\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}