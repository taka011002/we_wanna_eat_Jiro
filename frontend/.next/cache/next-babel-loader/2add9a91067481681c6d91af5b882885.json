{"ast":null,"code":"var _jsxFileName = \"/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\nconst App = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"\\u30AA\\u30F3\\u30E9\\u30A4\\u30F3\\u98F2\\u307F\\u4F1A\\u3084\\u308D\\u3046\\u305C\\uFF01\\uFF01\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, props.categories.map((category, index) => {\n    return __jsx(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: \"/categories\",\n        query: {\n          index: `${category.id}`\n        }\n      },\n      as: \"/categories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, category.name)));\n  })));\n};\n\nApp.getInitialProps = async ({\n  req\n}) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(API_PATH + \"/categories\");\n  const categories = await res.json();\n  return {\n    categories\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/index.tsx"],"names":["fetch","Link","API_PATH","App","props","categories","map","category","index","pathname","query","id","name","getInitialProps","req","res","json"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAWA,MAAMC,GAAG,GAAIC,KAAD,IAAqB;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,QAAD,EAAqBC,KAArB,KAAuC;AAC3D,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE,aADN;AAEJC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAG,GAAED,QAAQ,CAACI,EAAG;AAAxB;AAFH,OADR;AAKE,MAAA,EAAE,EAAE,aALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,QAAQ,CAACK,IAAb,CAPF,CADF,CADF;AAaD,GAdA,CADH,CAFF,CADF;AAsBD,CAvBD;;AAyBAT,GAAG,CAACU,eAAJ,GAAsB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACvC;AACA,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAACE,QAAQ,GAAG,aAAZ,CAAvB;AACA,QAAMG,UAAsB,GAAG,MAAMU,GAAG,CAACC,IAAJ,EAArC;AACA,SAAO;AAAEX,IAAAA;AAAF,GAAP;AACD,CALD;;AAMA,eAAeF,GAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\ninterface AppProps {\n  categories: Category[];\n}\n\ninterface Category {\n  id: number;\n  name: string;\n}\n\nconst App = (props: AppProps) => {\n  return (\n    <div>\n      <h1>オンライン飲み会やろうぜ！！</h1>\n      <ul>\n        {props.categories.map((category: Category, index: number) => {\n          return (\n            <li key={index}>\n              <Link\n                href={{\n                  pathname: \"/categories\",\n                  query: { index: `${category.id}` },\n                }}\n                as={\"/categories\"}\n              >\n                <a>{category.name}</a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nApp.getInitialProps = async ({ req }) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(API_PATH + \"/categories\");\n  const categories: Category[] = await res.json();\n  return { categories };\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}