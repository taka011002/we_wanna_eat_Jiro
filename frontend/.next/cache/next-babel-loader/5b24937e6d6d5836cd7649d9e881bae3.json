{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nimport Peer from \"skyway-js\";\nimport { SKYWAY_API_KEY } from \"./env\";\n\nvar Rooms = function Rooms(props) {\n  var getLocalStream = function getLocalStream() {\n    return _regeneratorRuntime.async(function getLocalStream$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(navigator.mediaDevices.getUserMedia({\n              audio: true,\n              video: true\n            }));\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var localStreamSetting = function localStreamSetting(video) {\n    return _regeneratorRuntime.async(function localStreamSetting$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getLocalStream());\n\n          case 2:\n            video.srcObject = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(video.play());\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState = useState(true),\n      localVideoMuted = _useState[0],\n      setLocalVideoMuted = _useState[1];\n\n  var _useState2 = useState(new MediaStream()),\n      localVideoStream = _useState2[0],\n      setLocalVideoStream = _useState2[1];\n\n  var _useState3 = useState(true),\n      localVideoPlaysInline = _useState3[0],\n      setLocalVideoPlaysInline = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      localVideoMessages = _useState4[0],\n      setLocalVideoMessages = _useState4[1];\n\n  var peer = new Peer({\n    key: SKYWAY_API_KEY\n  });\n  useEffect(function () {}, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"heading\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Room Example \\u30BF\\u30A4\\u30C8\\u30EB\"), __jsx(\"p\", {\n    className: \"note\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Enter remote peer ID to call.\"), __jsx(\"div\", {\n    className: \"p2p-media\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"remote-stream\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"video-remote-stream\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"local-stream\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"video-local-stream\",\n    muted: localVideoMuted,\n    ref: localStreamSetting,\n    playsInline: localVideoPlaysInline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Your ID: \", __jsx(\"span\", {\n    id: \"local-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 24\n    }\n  })), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Remote Peer ID\",\n    id: \"remote-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"call-trigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Join\"), __jsx(\"button\", {\n    id: \"close-trigger\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Leave\")))), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }));\n};\n\nRooms.getInitialProps = function _callee(_ref) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          query = _ref.query;\n          return _context3.abrupt(\"return\", 1);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Rooms;","map":{"version":3,"sources":["/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx"],"names":["useState","useEffect","Peer","SKYWAY_API_KEY","Rooms","props","getLocalStream","navigator","mediaDevices","getUserMedia","audio","video","localStreamSetting","srcObject","play","localVideoMuted","setLocalVideoMuted","MediaStream","localVideoStream","setLocalVideoStream","localVideoPlaysInline","setLocalVideoPlaysInline","localVideoMessages","setLocalVideoMessages","peer","key","getInitialProps","query"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport Peer from \"skyway-js\";\n\nimport { API_PATH, SKYWAY_API_KEY } from \"./env\";\n\nconst Rooms = (props) => {\n  const getLocalStream = async () =>\n    await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n  const localStreamSetting = async (video: HTMLVideoElement) => {\n    video.srcObject = await getLocalStream();\n    await video.play();\n  };\n\n  const [localVideoMuted, setLocalVideoMuted] = useState(true);\n  const [localVideoStream, setLocalVideoStream] = useState(new MediaStream());\n  const [localVideoPlaysInline, setLocalVideoPlaysInline] = useState(true);\n  const [localVideoMessages, setLocalVideoMessages] = useState(\"\");\n\n  const peer = new Peer({ key: SKYWAY_API_KEY });\n\n  useEffect(() => {}, []);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"heading\">Room Example タイトル</h1>\n        <p className=\"note\">Enter remote peer ID to call.</p>\n        <div className=\"p2p-media\">\n          <div className=\"remote-stream\">\n            <video id=\"video-remote-stream\"></video>\n          </div>\n          <div className=\"local-stream\">\n            <video\n              id=\"video-local-stream\"\n              muted={localVideoMuted}\n              ref={localStreamSetting}\n              playsInline={localVideoPlaysInline}\n            ></video>\n            <p>\n              Your ID: <span id=\"local-id\"></span>\n            </p>\n            <input\n              type=\"text\"\n              placeholder=\"Remote Peer ID\"\n              id=\"remote-id\"\n            ></input>\n            <button id=\"call-trigger\">Join</button>\n            <button id=\"close-trigger\">Leave</button>\n          </div>\n        </div>\n      </div>\n      <ul></ul>\n    </div>\n  );\n};\n\nRooms.getInitialProps = async ({ query }) => {\n  return 1;\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}