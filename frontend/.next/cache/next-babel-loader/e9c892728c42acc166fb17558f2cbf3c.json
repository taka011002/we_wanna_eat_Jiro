{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this2 = this,\n    _jsxFileName = \"/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Peer from \"skyway-js\";\nimport { SKYWAY_API_KEY } from \"./env\";\n\nvar Room = /*#__PURE__*/function (_React$Component) {\n  _inherits(Room, _React$Component);\n\n  var _super = _createSuper(Room);\n\n  function Room(props) {\n    var _this;\n\n    _classCallCheck(this, Room);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getRoomModeByHash\", function () {\n      return location.hash === \"#sfu\" ? \"sfu\" : \"mesh\";\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLocalStream\", function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(navigator.mediaDevices.getUserMedia({\n                audio: true,\n                video: true\n              }));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    });\n\n    _this.state = {};\n    return _this;\n  }\n\n  return Room;\n}(React.Component);\n\nvar Rooms = function Rooms(props) {\n  var _useState = useState(getRoomModeByHash()),\n      _useState2 = _slicedToArray(_useState, 2),\n      roomMode = _useState2[0],\n      setRoomMode = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomId = _useState4[0],\n      setRoomId = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      localVideoMuted = _useState6[0],\n      setLocalVideoMuted = _useState6[1];\n\n  var _useState7 = useState(new MediaStream()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      localVideoStream = _useState8[0],\n      setLocalVideoStream = _useState8[1];\n\n  var _useState9 = useState(true),\n      _useState10 = _slicedToArray(_useState9, 2),\n      localVideoPlaysInline = _useState10[0],\n      setLocalVideoPlaysInline = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      localVideoMessages = _useState12[0],\n      setLocalVideoMessages = _useState12[1];\n\n  var joinHandler = function joinHandler() {\n    var peer, room;\n    return _regeneratorRuntime.async(function joinHandler$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            peer = new Peer({\n              key: SKYWAY_API_KEY\n            });\n\n            if (peer.open) {\n              _context3.next = 3;\n              break;\n            }\n\n            return _context3.abrupt(\"return\");\n\n          case 3:\n            _context3.t0 = peer;\n            _context3.t1 = roomId;\n            _context3.t2 = getRoomModeByHash();\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(getLocalStream());\n\n          case 8:\n            _context3.t3 = _context3.sent;\n            _context3.t4 = {\n              mode: _context3.t2,\n              stream: _context3.t3\n            };\n            room = _context3.t0.joinRoom.call(_context3.t0, _context3.t1, _context3.t4);\n            room.once(\"open\", function () {\n              setLocalVideoMessages(localVideoMessages + \"=== You joined ===\\n\");\n            });\n            room.on(\"peerJoin\", function (peerId) {\n              setLocalVideoMessages(localVideoMessages + \"=== \".concat(peerId, \" joined ===\\n\"));\n            }); // Render remote stream for new peer join in the room\n\n            room.on(\"stream\", function _callee2(stream) {\n              var newVideo;\n              return _regeneratorRuntime.async(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      newVideo = document.createElement(\"video\");\n                      newVideo.srcObject = stream;\n                      setLocalVideoPlaysInline(true); // mark peerId to find it later at peerLeave event\n\n                      newVideo.setAttribute(\"data-peer-id\", stream.peerId);\n                      document.getElementById(\"remote-streams\").append(newVideo);\n                      _context2.next = 7;\n                      return _regeneratorRuntime.awrap(newVideo.play()[\"catch\"](console.error));\n\n                    case 7:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            });\n            room.on(\"data\", function (_ref) {\n              var data = _ref.data,\n                  src = _ref.src;\n              // Show a message sent to the room and who sent\n              setLocalVideoMessages(localVideoMessages + \"\".concat(src, \": \").concat(data, \"\\n\"));\n            }); // for closing room members\n\n            /*\n            room.on(\"peerLeave\", (peerId) => {\n              const remoteVideo = document\n                .getElementById(\"remote-streams\")\n                .querySelector(`[data-peer-id=${peerId}]`);\n              remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n              remoteVideo.srcObject = null;\n              remoteVideo.remove();\n              setLocalVideoMessages(localVideoMessages + `=== ${peerId} left ===\\n`);\n            });\n            */\n            // for closing myself\n\n            /*\n            room.once(\"close\", () => {\n              document\n                .getElementById(\"send-trigger\")\n                .removeEventListener(\"click\", onClickSend);\n              setLocalVideoMessages(localVideoMessages + \"== You left ===\\n\");\n              Array.from(document.getElementById(\"\").children).forEach(\n                (remoteVideo) => {\n                  remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n                  remoteVideo.srcObject = null;\n                  remoteVideo.remove();\n                }\n              );\n            });\n            */\n\n            /*\n            function onClickSend() {\n              // Send message to all of the peers in the room via websocket\n              room.send(localText.value);\n               messages.textContent += `${peer.id}: ${localText.value}\\n`;\n              localText.value = \"\";\n            }\n            */\n\n          case 15:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    window.addEventListener(\"hashchange\", function () {\n      return setRoomMode(getRoomModeByHash());\n    });\n    getLocalStream().then(function (stream) {\n      setLocalVideoStream(stream);\n      return joinHandler();\n    }).then(function () {});\n  }, [localVideoStream]);\n  return __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"heading\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Room Example \\u30BF\\u30A4\\u30C8\\u30EB\"), __jsx(\"div\", {\n    className: \"room\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"local-stream\",\n    muted: localVideoMuted,\n    ref: function _callee3(video) {\n      return _regeneratorRuntime.async(function _callee3$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              // Cannot set property 'srcObject' of null問題\n              video.srcObject = localVideoStream;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(video.play());\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    playsInline: localVideoPlaysInline,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }), __jsx(\"span\", {\n    id: \"room-mode\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, roomMode), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Room Name\",\n    id: \"room-id\",\n    onChange: function onChange(e) {\n      setRoomId(e.target.value);\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"join-trigger\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Join\"), __jsx(\"button\", {\n    id: \"leave-trigger\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Leave\")), __jsx(\"div\", {\n    className: \"remote-streams\",\n    id: \"remote-streams\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, __jsx(\"pre\", {\n    className: \"messages\",\n    id: \"messages\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, localVideoMessages), __jsx(\"input\", {\n    type: \"text\",\n    id: \"local-text\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"send-trigger\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, \"Send\")))), __jsx(\"ul\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }));\n};\n\nRooms.getInitialProps = function _callee4(_ref2) {\n  var query;\n  return _regeneratorRuntime.async(function _callee4$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          query = _ref2.query;\n          return _context5.abrupt(\"return\", 1);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Rooms;","map":{"version":3,"sources":["/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx"],"names":["React","Peer","SKYWAY_API_KEY","Room","props","location","hash","navigator","mediaDevices","getUserMedia","audio","video","state","Component","Rooms","useState","getRoomModeByHash","roomMode","setRoomMode","roomId","setRoomId","localVideoMuted","setLocalVideoMuted","MediaStream","localVideoStream","setLocalVideoStream","localVideoPlaysInline","setLocalVideoPlaysInline","localVideoMessages","setLocalVideoMessages","joinHandler","peer","key","open","getLocalStream","mode","stream","room","joinRoom","once","on","peerId","newVideo","document","createElement","srcObject","setAttribute","getElementById","append","play","console","error","data","src","useEffect","window","addEventListener","then","e","target","value","getInitialProps","query"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Peer from \"skyway-js\";\n\nimport { API_PATH, SKYWAY_API_KEY } from \"./env\";\n\ninterface RoomProps {}\n\ninterface RoomState {}\n\nclass Room extends React.Component<RoomProps, RoomState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n  }\n  getRoomModeByHash = () => (location.hash === \"#sfu\" ? \"sfu\" : \"mesh\");\n  getLocalStream = async () =>\n    await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n}\n\nconst Rooms = (props) => {\n  const [roomMode, setRoomMode] = useState(getRoomModeByHash());\n  const [roomId, setRoomId] = useState(\"\");\n  const [localVideoMuted, setLocalVideoMuted] = useState(true);\n  const [localVideoStream, setLocalVideoStream] = useState(new MediaStream());\n  const [localVideoPlaysInline, setLocalVideoPlaysInline] = useState(true);\n  const [localVideoMessages, setLocalVideoMessages] = useState(\"\");\n  const joinHandler = async () => {\n    const peer = new Peer({ key: SKYWAY_API_KEY });\n\n    if (!peer.open) {\n      return;\n    }\n\n    const room = peer.joinRoom(roomId, {\n      mode: getRoomModeByHash(),\n      stream: await getLocalStream(),\n    });\n\n    room.once(\"open\", () => {\n      setLocalVideoMessages(localVideoMessages + \"=== You joined ===\\n\");\n    });\n    room.on(\"peerJoin\", (peerId) => {\n      setLocalVideoMessages(localVideoMessages + `=== ${peerId} joined ===\\n`);\n    });\n\n    // Render remote stream for new peer join in the room\n    room.on(\"stream\", async (stream) => {\n      const newVideo = document.createElement(\"video\");\n      newVideo.srcObject = stream;\n      setLocalVideoPlaysInline(true);\n      // mark peerId to find it later at peerLeave event\n      newVideo.setAttribute(\"data-peer-id\", stream.peerId);\n      document.getElementById(\"remote-streams\").append(newVideo);\n      await newVideo.play().catch(console.error);\n    });\n\n    room.on(\"data\", ({ data, src }) => {\n      // Show a message sent to the room and who sent\n      setLocalVideoMessages(localVideoMessages + `${src}: ${data}\\n`);\n    });\n\n    // for closing room members\n    /*\n    room.on(\"peerLeave\", (peerId) => {\n      const remoteVideo = document\n        .getElementById(\"remote-streams\")\n        .querySelector(`[data-peer-id=${peerId}]`);\n      remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n      remoteVideo.srcObject = null;\n      remoteVideo.remove();\n      setLocalVideoMessages(localVideoMessages + `=== ${peerId} left ===\\n`);\n    });\n    */\n\n    // for closing myself\n    /*\n    room.once(\"close\", () => {\n      document\n        .getElementById(\"send-trigger\")\n        .removeEventListener(\"click\", onClickSend);\n      setLocalVideoMessages(localVideoMessages + \"== You left ===\\n\");\n      Array.from(document.getElementById(\"\").children).forEach(\n        (remoteVideo) => {\n          remoteVideo.srcObject.getTracks().forEach((track) => track.stop());\n          remoteVideo.srcObject = null;\n          remoteVideo.remove();\n        }\n      );\n    });\n    */\n\n    /*\n    function onClickSend() {\n      // Send message to all of the peers in the room via websocket\n      room.send(localText.value);\n\n      messages.textContent += `${peer.id}: ${localText.value}\\n`;\n      localText.value = \"\";\n    }\n    */\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"hashchange\", () =>\n      setRoomMode(getRoomModeByHash())\n    );\n\n    getLocalStream()\n      .then((stream) => {\n        setLocalVideoStream(stream);\n        return joinHandler();\n      })\n      .then(() => {});\n  }, [localVideoStream]);\n\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"heading\">Room Example タイトル</h1>\n        <div className=\"room\">\n          <div>\n            <video\n              id=\"local-stream\"\n              muted={localVideoMuted}\n              ref={async (video) => {\n                // Cannot set property 'srcObject' of null問題\n                video.srcObject = localVideoStream;\n                await video.play();\n              }}\n              playsInline={localVideoPlaysInline}\n            ></video>\n            <span id=\"room-mode\">{roomMode}</span>\n            <input\n              type=\"text\"\n              placeholder=\"Room Name\"\n              id=\"room-id\"\n              onChange={(e) => {\n                setRoomId(e.target.value);\n              }}\n            />\n            <button id=\"join-trigger\">Join</button>\n            <button id=\"leave-trigger\">Leave</button>\n          </div>\n          <div className=\"remote-streams\" id=\"remote-streams\"></div>\n          <div>\n            <pre className=\"messages\" id=\"messages\">\n              {localVideoMessages}\n            </pre>\n            <input type=\"text\" id=\"local-text\" />\n            <button id=\"send-trigger\">Send</button>\n          </div>\n        </div>\n      </div>\n      <ul></ul>\n    </div>\n  );\n};\n\nRooms.getInitialProps = async ({ query }) => {\n  return 1;\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}