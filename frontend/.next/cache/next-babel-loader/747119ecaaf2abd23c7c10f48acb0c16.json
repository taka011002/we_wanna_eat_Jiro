{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yuzi/myprograming/next-todo/pages/categories.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\nvar Categories = function Categories(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, props.rooms.map(function (room, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 19\n      }\n    }, \"\\u540D\\u524D: \", room.name, \", \\u7BA1\\u7406\\u8005: \", room.admin), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    }, \"\\u8AAC\\u660E: \", room.description))));\n  })));\n};\n\nCategories.getInitialProps = function _callee(_ref) {\n  var query, res, resJson, rooms;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(API_PATH + \"/categories/\" + query.name + \"/rooms\"));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          resJson = _context.sent;\n          console.log(resJson);\n          rooms = resJson.map(function (room) {\n            // roomには名前, 管理者名, 詳細あたりがあればよさそう\n            return {\n              name: room.name,\n              admin: room.admin,\n              description: room.description\n            };\n          });\n          return _context.abrupt(\"return\", {\n            rooms: rooms\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Categories;","map":{"version":3,"sources":["/Users/yuzi/myprograming/next-todo/pages/categories.tsx"],"names":["fetch","Link","API_PATH","Categories","props","rooms","map","room","index","name","admin","description","getInitialProps","query","res","json","resJson","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAQA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,KAAN,CAAYC,GAAZ,CAAgB,UAACC,IAAD,EAAaC,KAAb,EAA+B;AAC9C,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACOD,IAAI,CAACE,IADZ,4BACyBF,IAAI,CAACG,KAD9B,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAUH,IAAI,CAACI,WAAf,CAJF,CADF,CADF,CADF;AAYD,GAbA,CADH,CADF,CADF;AAoBD,CArBD;;AAuBAR,UAAU,CAACS,eAAX,GAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT;AAAA;AAAA,2CAGTb,KAAK,CAACE,QAAQ,GAAG,cAAX,GAA4BW,KAAK,CAACJ,IAAlC,GAAyC,QAA1C,CAHI;;AAAA;AAGrBK,UAAAA,GAHqB;AAAA;AAAA,2CAILA,GAAG,CAACC,IAAJ,EAJK;;AAAA;AAIrBC,UAAAA,OAJqB;AAK3BC,UAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACMX,UAAAA,KANqB,GAMbW,OAAO,CAACV,GAAR,CAAY,UAACC,IAAD,EAAU;AAClC;AACA,mBAAO;AACLE,cAAAA,IAAI,EAAEF,IAAI,CAACE,IADN;AAELC,cAAAA,KAAK,EAAEH,IAAI,CAACG,KAFP;AAGLC,cAAAA,WAAW,EAAEJ,IAAI,CAACI;AAHb,aAAP;AAKD,WAPa,CANa;AAAA,2CAcpB;AAAEN,YAAAA,KAAK,EAALA;AAAF,WAdoB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B;;AAgBA,eAAeF,UAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nimport { API_PATH } from \"./env\";\n\ninterface Room {\n  name: string;\n  admin: string;\n  description: string;\n}\n\nconst Categories = (props) => {\n  return (\n    <div>\n      <ul>\n        {props.rooms.map((room: Room, index: number) => {\n          return (\n            <li key={index}>\n              <Link href=\"/\">\n                <a>\n                  <div>\n                    名前: {room.name}, 管理者: {room.admin}\n                  </div>\n                  <div>説明: {room.description}</div>\n                </a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nCategories.getInitialProps = async ({ query }) => {\n  // indexを元にapi叩く\n  // ex: /categories/1/rooms (カテゴリID = 1の部屋全て)\n  const res = await fetch(API_PATH + \"/categories/\" + query.name + \"/rooms\");\n  const resJson = await res.json();\n  console.log(resJson);\n  const rooms = resJson.map((room) => {\n    // roomには名前, 管理者名, 詳細あたりがあればよさそう\n    return {\n      name: room.name,\n      admin: room.admin,\n      description: room.description,\n    };\n  });\n  return { rooms };\n};\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}