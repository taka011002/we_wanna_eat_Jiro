{"ast":null,"code":"var _jsxFileName = \"/Users/yuzi/myprograming/next-todo/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\nconst BASE_PATH = \"http://virtserver.swaggerhub.com/ziroppe/WeWantToEatJiro/1.0.0\";\n\nconst App = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"\\u30AA\\u30F3\\u30E9\\u30A4\\u30F3\\u98F2\\u307F\\u4F1A\\u3084\\u308D\\u3046\\u305C\\uFF01\\uFF01\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.categories.map((category, index) => {\n    return __jsx(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: \"/categories\",\n        query: {\n          index: `${index}`\n        }\n      },\n      as: `/categories/${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, category)));\n  })));\n};\n\nApp.getInitialProps = async ({\n  req\n}) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(BASE_PATH + \"/categories\");\n  const data = await res.json();\n  const categories = data.map(val => {\n    return val.name;\n  });\n  return {\n    categories\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yuzi/myprograming/next-todo/pages/index.tsx"],"names":["fetch","Link","BASE_PATH","App","props","categories","map","category","index","pathname","query","getInitialProps","req","res","data","json","val","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,MAAMC,SAAS,GACb,gEADF;;AAOA,MAAMC,GAAG,GAAIC,KAAD,IAAqB;AAC/B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4FADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,QAAD,EAAmBC,KAAnB,KAAqC;AACzD,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AACE,MAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAE,aAAZ;AAA2BC,QAAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAG,GAAEA,KAAM;AAAlB;AAAlC,OADR;AAEE,MAAA,EAAE,EAAG,eAAcA,KAAM,EAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,QAAJ,CAJF,CADF,CADF;AAUD,GAXA,CADH,CAFF,CADF;AAmBD,CApBD;;AAsBAJ,GAAG,CAACQ,eAAJ,GAAsB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACvC;AACA,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAACE,SAAS,GAAG,aAAb,CAAvB;AACA,QAAMY,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMV,UAAoB,GAAGS,IAAI,CAACR,GAAL,CAAUU,GAAD,IAAS;AAC7C,WAAOA,GAAG,CAACC,IAAX;AACD,GAF4B,CAA7B;AAGA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACD,CARD;;AASA,eAAeF,GAAf","sourcesContent":["import fetch from \"isomorphic-unfetch\";\nimport Link from \"next/link\";\n\nconst BASE_PATH =\n  \"http://virtserver.swaggerhub.com/ziroppe/WeWantToEatJiro/1.0.0\";\n\ninterface AppProps {\n  categories: string[];\n}\n\nconst App = (props: AppProps) => {\n  return (\n    <div>\n      <h1>オンライン飲み会やろうぜ！！</h1>\n      <ul>\n        {props.categories.map((category: string, index: number) => {\n          return (\n            <li key={index}>\n              <Link\n                href={{ pathname: \"/categories\", query: { index: `${index}` } }}\n                as={`/categories/${index}`}\n              >\n                <a>{category}</a>\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nApp.getInitialProps = async ({ req }) => {\n  // ルームの全てのカテゴリを取得\n  const res = await fetch(BASE_PATH + \"/categories\");\n  const data = await res.json();\n  const categories: string[] = data.map((val) => {\n    return val.name;\n  });\n  return { categories };\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}