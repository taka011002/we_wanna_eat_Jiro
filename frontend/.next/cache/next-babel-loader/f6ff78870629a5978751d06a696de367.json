{"ast":null,"code":"var _jsxFileName = \"/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect, useRef } from \"react\";\nimport Peer from \"skyway-js\";\nimport { SKYWAY_API_KEY } from \"./env\";\n\nconst Rooms = props => {\n  const localStreamSetting = async () => {\n    localStreamRef.current.srcObject = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    await localStreamRef.current.play();\n  };\n\n  const localStreamRef = useRef(null);\n  const remoteStreamRef = useRef(null);\n  const {\n    0: localId,\n    1: setLocalId\n  } = useState(\"\");\n  const {\n    0: localVideoMuted,\n    1: setLocalVideoMuted\n  } = useState(true);\n  const {\n    0: localVideoPlaysInline,\n    1: setLocalVideoPlaysInline\n  } = useState(true);\n  const {\n    0: remoteId,\n    1: setRemoteId\n  } = useState(\"\");\n  const {\n    0: remoteVideoMuted,\n    1: setRemoteVideoMuted\n  } = useState(true);\n  const {\n    0: remoteVideoPlaysInline,\n    1: setRemoteVideoPlaysInline\n  } = useState(false);\n  const {\n    0: peer,\n    1: setPeer\n  } = useState(new Peer({\n    key: SKYWAY_API_KEY\n  }));\n\n  const callTrigerClick = async () => {\n    // Note that you need to ensure the peer has connected to signaling server\n    // before using methods of peer instance.\n    if (!peer.open) {\n      return;\n    }\n\n    const mediaConnection = localStreamRef.current.srcObject instanceof MediaStream ? peer.call(remoteId, localStreamRef.current.srcObject) : null;\n    mediaConnection.on(\"stream\", async stream => {\n      // Render remote stream for caller\n      remoteStreamRef.current.srcObject = stream;\n      setRemoteVideoPlaysInline(true);\n      await remoteStreamRef.current.play().catch(console.error);\n    });\n    mediaConnection.once(\"close\", () => {\n      if (remoteStreamRef.current.srcObject instanceof MediaStream) remoteStreamRef.current.srcObject.getTracks().forEach(track => track.stop());\n      remoteStreamRef.current.srcObject = null;\n    });\n    document.getElementById(\"close-trigger\").addEventListener(\"click\", () => mediaConnection.close(true));\n  };\n\n  peer.once(\"open\", id => setLocalId(id)); // Register callee handler\n\n  peer.on(\"call\", mediaConnection => {\n    if (localStreamRef.current.srcObject instanceof MediaStream) mediaConnection.answer(localStreamRef.current.srcObject);\n    mediaConnection.on(\"stream\", async stream => {\n      // Render remote stream for callee\n      remoteStreamRef.current.srcObject = stream;\n      setRemoteVideoPlaysInline(true);\n      await remoteStreamRef.current.play().catch(console.error);\n    });\n    mediaConnection.once(\"close\", () => {\n      if (remoteStreamRef.current.srcObject instanceof MediaStream) remoteStreamRef.current.srcObject.getTracks().forEach(track => track.stop());\n      remoteStreamRef.current.srcObject = null;\n    });\n    document.getElementById(\"close-trigger\").addEventListener(\"click\", () => mediaConnection.close(true));\n  });\n  peer.on(\"error\", console.error);\n  useEffect(() => {\n    (async () => {\n      await localStreamSetting();\n    })();\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Room Example \\u30BF\\u30A4\\u30C8\\u30EB\"), __jsx(\"p\", {\n    className: \"note\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, \"Enter remote peer ID to call.\"), __jsx(\"div\", {\n    className: \"p2p-media\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"remote-stream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"video-remote-stream\",\n    muted: remoteVideoMuted,\n    ref: remoteStreamRef,\n    playsInline: remoteVideoPlaysInline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    className: \"local-stream\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, __jsx(\"video\", {\n    id: \"video-local-stream\",\n    muted: localVideoMuted,\n    ref: localStreamRef,\n    playsInline: localVideoPlaysInline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Your ID: \", __jsx(\"span\", {\n    id: \"local-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 24\n    }\n  }, localId)), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Room Name\",\n    id: \"room-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    id: \"call-trigger\",\n    onClick: callTrigerClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Join\"), __jsx(\"button\", {\n    id: \"close-trigger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Leave\")))), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Rooms;","map":{"version":3,"sources":["/Users/yuzi/myprograming/we_wanna_eat_Jiro/frontend/pages/rooms.tsx"],"names":["useState","useEffect","useRef","Peer","SKYWAY_API_KEY","Rooms","props","localStreamSetting","localStreamRef","current","srcObject","navigator","mediaDevices","getUserMedia","audio","video","play","remoteStreamRef","localId","setLocalId","localVideoMuted","setLocalVideoMuted","localVideoPlaysInline","setLocalVideoPlaysInline","remoteId","setRemoteId","remoteVideoMuted","setRemoteVideoMuted","remoteVideoPlaysInline","setRemoteVideoPlaysInline","peer","setPeer","key","callTrigerClick","open","mediaConnection","MediaStream","call","on","stream","catch","console","error","once","getTracks","forEach","track","stop","document","getElementById","addEventListener","close","id","answer"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport Peer from \"skyway-js\";\n\nimport { API_PATH, SKYWAY_API_KEY } from \"./env\";\n\nconst Rooms = (props) => {\n  const localStreamSetting = async () => {\n    localStreamRef.current.srcObject = await navigator.mediaDevices.getUserMedia(\n      {\n        audio: true,\n        video: true,\n      }\n    );\n    await localStreamRef.current.play();\n  };\n\n  const localStreamRef = useRef<HTMLVideoElement>(null);\n  const remoteStreamRef = useRef<HTMLVideoElement>(null);\n\n  const [localId, setLocalId] = useState(\"\");\n  const [localVideoMuted, setLocalVideoMuted] = useState(true);\n  const [localVideoPlaysInline, setLocalVideoPlaysInline] = useState(true);\n\n  const [remoteId, setRemoteId] = useState(\"\");\n  const [remoteVideoMuted, setRemoteVideoMuted] = useState(true);\n  const [remoteVideoPlaysInline, setRemoteVideoPlaysInline] = useState(false);\n\n  const [peer, setPeer] = useState(new Peer({ key: SKYWAY_API_KEY }));\n\n  const callTrigerClick = async () => {\n    // Note that you need to ensure the peer has connected to signaling server\n    // before using methods of peer instance.\n    if (!peer.open) {\n      return;\n    }\n\n    const mediaConnection =\n      localStreamRef.current.srcObject instanceof MediaStream\n        ? peer.call(remoteId, localStreamRef.current.srcObject)\n        : null;\n\n    mediaConnection.on(\"stream\", async (stream: MediaStream) => {\n      // Render remote stream for caller\n      remoteStreamRef.current.srcObject = stream;\n      setRemoteVideoPlaysInline(true);\n      await remoteStreamRef.current.play().catch(console.error);\n    });\n\n    mediaConnection.once(\"close\", () => {\n      if (remoteStreamRef.current.srcObject instanceof MediaStream)\n        remoteStreamRef.current.srcObject\n          .getTracks()\n          .forEach((track) => track.stop());\n      remoteStreamRef.current.srcObject = null;\n    });\n\n    document\n      .getElementById(\"close-trigger\")\n      .addEventListener(\"click\", () => mediaConnection.close(true));\n  };\n\n  peer.once(\"open\", (id: string) => setLocalId(id));\n\n  // Register callee handler\n  peer.on(\"call\", (mediaConnection) => {\n    if (localStreamRef.current.srcObject instanceof MediaStream)\n      mediaConnection.answer(localStreamRef.current.srcObject);\n\n    mediaConnection.on(\"stream\", async (stream) => {\n      // Render remote stream for callee\n      remoteStreamRef.current.srcObject = stream;\n      setRemoteVideoPlaysInline(true);\n      await remoteStreamRef.current.play().catch(console.error);\n    });\n\n    mediaConnection.once(\"close\", () => {\n      if (remoteStreamRef.current.srcObject instanceof MediaStream)\n        remoteStreamRef.current.srcObject\n          .getTracks()\n          .forEach((track) => track.stop());\n      remoteStreamRef.current.srcObject = null;\n    });\n\n    document\n      .getElementById(\"close-trigger\")\n      .addEventListener(\"click\", () => mediaConnection.close(true));\n  });\n  peer.on(\"error\", console.error);\n\n  useEffect(() => {\n    (async () => {\n      await localStreamSetting();\n    })();\n  }, []);\n  return (\n    <div>\n      <div className=\"container\">\n        <h1 className=\"heading\">Room Example タイトル</h1>\n        <p className=\"note\">Enter remote peer ID to call.</p>\n        <div className=\"p2p-media\">\n          <div className=\"remote-stream\">\n            <video\n              id=\"video-remote-stream\"\n              muted={remoteVideoMuted}\n              ref={remoteStreamRef}\n              playsInline={remoteVideoPlaysInline}\n            ></video>\n          </div>\n          <div className=\"local-stream\">\n            <video\n              id=\"video-local-stream\"\n              muted={localVideoMuted}\n              ref={localStreamRef}\n              playsInline={localVideoPlaysInline}\n            ></video>\n            <p>\n              Your ID: <span id=\"local-id\">{localId}</span>\n            </p>\n            <input type=\"text\" placeholder=\"Room Name\" id=\"room-id\"></input>\n            <button id=\"call-trigger\" onClick={callTrigerClick}>\n              Join\n            </button>\n            <button id=\"close-trigger\">Leave</button>\n          </div>\n        </div>\n      </div>\n      <ul></ul>\n    </div>\n  );\n};\n\nexport default Rooms;\n"]},"metadata":{},"sourceType":"module"}